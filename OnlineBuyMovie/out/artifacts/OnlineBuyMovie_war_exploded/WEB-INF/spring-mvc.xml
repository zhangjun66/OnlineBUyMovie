<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:component-scan base-package="com.icss.action" />
	<context:component-scan base-package="com.icss.action.back" />
	<mvc:annotation-driven />


	<task:annotation-driven scheduler="myScheduler"/>
	<task:scheduler id="myScheduler" pool-size="5"/>

	<bean
			class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
	</bean>

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="utf-8" />
				<property name="writeAcceptCharset" value="false" />
			</bean>
			<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean
			class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Throwable">/error/error.jsp</prop>
				<prop
						key="org.springframework.web.multipart.MaxUploadSizeExceededException">/error/OverMaxUploadSize.jsp</prop>
			</props>
		</property>
	</bean>
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10240000" />
	</bean>

	<bean id="handlerMapping"
		  class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="interceptors">
			<list>
				<bean class="com.icss.intercept.TimeBasedAccessInterceptor" />
			</list>
		</property>
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.icss.intercept.TimeBasedAccessInterceptor">
				<property name="openingTime" value="0" />
				<property name="closingTime" value="24" />
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="jdbc:oracle:thin:@10.0.8.15:1522:orcl"/>
		<property name="username" value="movie"/>
		<property name="password" value="123456"/>
		<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="20"/>
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="3"/>
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="5000"/>
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="3"/>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000"/>
		<!-- <property name = "validationQuery" value = "${validationQuery}" /> -->
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<property name="maxOpenPreparedStatements" value="20"/>
		<!-- 打开 removeAbandoned 功能 -->
		<property name="removeAbandoned" value="true"/>
		<!-- 1800 秒，也就是 30 分钟 -->
		<property name="removeAbandonedTimeout" value="1800"/>
		<!-- 关闭 abanded 连接时输出错误日志 -->
		<property name="logAbandoned" value="true"/>
		<property name="proxyFilters">
			<list>
				<ref bean="wall-filter"/>
				<ref bean="stat-filter"/>
				<ref bean="log-filter"/>
			</list>
		</property>
	</bean>


	<!-- 慢SQL记录 -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<!-- 慢sql时间设置,即执行时间大于200毫秒的都是慢sql -->
		<property name="slowSqlMillis" value="2000"/>
		<property name="logSlowSql" value="true"/>
	</bean>

	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<property name="dataSourceLogEnabled" value="true"/>
		<property name="statementExecutableSqlLogEnable" value="true"/>
	</bean>

	<!-- 防御SQL攻击 -->
	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
		<property name="config" ref="wall-config"/>
		<property name="logViolation" value="true"/>
		<property name="throwException" value="false" />
	</bean>

	<bean id="wall-config" class="com.alibaba.druid.wall.WallConfig">
		<property name="strictSyntaxCheck" value="false"/>
		<property name="deleteAllow" value="false"/>
		<property name="truncateAllow" value="false"/>
		<property name="dropTableAllow" value="false"/>
		<property name="alterTableAllow" value="false"/>
		<property name="deleteWhereNoneCheck" value="false"/>
		<property name="updateWhereNoneCheck" value="false"/>

	</bean>


	<context:annotation-config/>
	<context:component-scan base-package="com.icss.biz"/>
	<context:component-scan base-package="com.icss.dao"/>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis.xml"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<tx:annotation-driven transaction-manager="txManager"/>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.icss.dao.batis"/>
	</bean>

</beans>
